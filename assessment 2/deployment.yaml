apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-deployment
  namespace: example-namespace
spec:
  replicas: 2 # to match the example, else I would have put 3
  selector:
    matchLabels:
      app: example-app
  template:
    metadata:
      labels:
        app: example-app
    spec:
      containers:
      - name: example-container
        image: busybox
        env:
        - name: SECRET_USERNAME  # "Create secret and put as deployment env"
          valueFrom:
            secretKeyRef:
              name: example-secret
              key: username
        - name: SECRET_PASSWORD
          valueFrom:
            secretKeyRef:
              name: example-secret
              key: password
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config  # Create file and put inside pods
        - name: efs-volume
          mountPath: /mnt/efs
      volumes:
      - name: config-volume
        configMap:
          name: example-config
      - name: efs-volume
        persistentVolumeClaim:
          claimName: example-pvc
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: example-app